{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calamity\\\\Documents\\\\SAEON_Work\\\\client\\\\src\\\\App.js\";\n// Table Data\nvar TableData = React.createClass({\n  displayName: \"TableData\",\n  render: function render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, \" \", this.props.data, \" \");\n  }\n}); // Table Element\n\nvar TableTitle = React.createClass({\n  displayName: \"TableTitle\",\n  render: function render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" \", this.props.title));\n  }\n});\nvar SearchMatch = React.createClass({\n  displayName: \"SearchMatch\",\n  render: function render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" Match: \", this.props.match));\n  }\n}); // Table\n\nvar Table = React.createClass({\n  displayName: \"Table\",\n  render: function render() {\n    // We need to get each row and store it in an array\n    var rowsTitle = [];\n    var search = [];\n    var searchterm = this.props.searchTerm; // need this or it doesnt work\n\n    var key = '';\n    this.props.data.forEach(function (row) {\n      if (row.title.toLowerCase().indexOf(searchterm.toLowerCase()) === -1 && row.tags.toLowerCase().indexOf(searchterm.toLowerCase()) === -1) return; // need to grab the correct match\n\n      if (row.title.toLowerCase().indexOf(searchterm.toLowerCase()) === -1) {\n        var m = row.tags.toLowerCase().split(' ');\n\n        for (var i in m) {\n          if (m[i].indexOf(searchterm.toLowerCase()) !== -1) key = m[i];\n        }\n      } else {\n        key = row.title.toLowerCase();\n      }\n\n      rowsTitle.push(React.createElement(TableTitle, {\n        title: row.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n      if (searchterm != '') rowsTitle.push(React.createElement(SearchMatch, {\n        match: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n      rowsTitle.push(React.createElement(TableData, {\n        data: row.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }); // Then render all. Render using childs. Send them prop.title and prop.data\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, rowsTitle);\n  }\n}); // Search\n\nvar Search = React.createClass({\n  displayName: \"Search\",\n  filterList: function filterList(event) {\n    this.props.userInput(event.target.value);\n  },\n  render: function render() {\n    return React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Start Typing\",\n      value: this.props.searchTerm,\n      onChange: this.filterList,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n}); // App\n\nvar App = React.createClass({\n  displayName: \"App\",\n  getInitialState: function getInitialState() {\n    return {\n      filterText: '',\n      filterText2: ''\n    };\n  },\n  handleUserInput: function handleUserInput(filter) {\n    this.setState({\n      filterText: filter\n    });\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Search, {\n      searchTerm: this.state.filterText,\n      userInput: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Table, {\n      searchTerm: this.state.filterText,\n      data: this.props.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n}); // JSON\n\nvar DATA = [{\n  \"title\": \"Binding\",\n  \"tags\": \"Binding Hiding Miding Sliding SAVE\",\n  \"content\": \"This is the binding content area where information about binding is shown\"\n}, {\n  \"title\": \"Constant\",\n  \"tags\": \"Math bath slather calf save\",\n  \"content\": \"This is the Constant content area where information about Constant is shown\"\n}, {\n  \"title\": \"Numbers\",\n  \"tags\": \"Happy birthday sir and maam\",\n  \"content\": \"This is the Numbers content area where information about Numbers is shown\"\n}]; // Render\n\nReact.render(React.createElement(App, {\n  data: DATA,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}), document.getElementById(\"app\"));","map":{"version":3,"sources":["C:\\Users\\Calamity\\Documents\\SAEON_Work\\client\\src\\App.js"],"names":["TableData","React","createClass","render","props","data","TableTitle","title","SearchMatch","match","Table","rowsTitle","search","searchterm","searchTerm","key","forEach","row","toLowerCase","indexOf","tags","m","split","i","push","content","Search","filterList","event","userInput","target","value","App","getInitialState","filterText","filterText2","handleUserInput","filter","setState","state","DATA","document","getElementById"],"mappings":"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","sourcesContent":["// Table Data\nvar TableData = React.createClass({\n  render: function() {\n    return (\n      <p> {this.props.data} < /p>\n    );\n  }\n});\n\n// Table Element\nvar TableTitle = React.createClass({\n  render: function() {\n    return ( \n      <div>\n        <h2> {this.props.title}</h2> \n      </div>\n    );\n  }\n});\n\nvar SearchMatch = React.createClass({\n  render: function() {\n    return ( \n      <div>\n        <p> Match: {this.props.match}</p> \n      </div>\n    );\n  }\n});\n\n// Table\nvar Table = React.createClass({\n  \n  render: function() {\n\n    // We need to get each row and store it in an array\n    var rowsTitle = [];\n    var search = [];\n    var searchterm = this.props.searchTerm; // need this or it doesnt work\n    var key = '';\n    this.props.data.forEach(function(row) {\n      if (row.title.toLowerCase().indexOf(searchterm.toLowerCase()) === -1 && \n          row.tags.toLowerCase().indexOf(searchterm.toLowerCase()) === -1\n         )\n        return;\n  \n      // need to grab the correct match\n      if (row.title.toLowerCase().indexOf(searchterm.toLowerCase()) === -1) {\n        var m = row.tags.toLowerCase().split(' ');\n        for (var i in m)\n         if (m[i].indexOf(searchterm.toLowerCase()) !== -1)\n            key = m[i];\n      } else {\n        key = row.title.toLowerCase();\n      }\n      \n      \n      \n      rowsTitle.push( <TableTitle title = {row.title} />);\n      if (searchterm != '')\n        rowsTitle.push( <SearchMatch match ={key} />);\n      rowsTitle.push( <TableData data = {row.content} />);\n      \n\n    });\n\n    // Then render all. Render using childs. Send them prop.title and prop.data\n    return ( \n      <div> \n        {rowsTitle} \n      </div>\n    );\n  }\n  });\n\n// Search\nvar Search = React.createClass({\n\nfilterList: function(event) {\n  this.props.userInput(event.target.value);\n},\n\nrender: function() {\n  return ( \n    <input type = \"text\" \n      placeholder = \"Start Typing\"\n      value = {this.props.searchTerm}\n      onChange = {this.filterList} autoFocus> \n    </input>\n  );\n}\n});\n\n// App\nvar App = React.createClass({\n\n  getInitialState: function() {\n    return {\n      filterText: '',\n      filterText2: ''\n    };\n  },\n\n  handleUserInput: function(filter) {\n    this.setState({\n      filterText: filter\n    });\n  },\n\n  render: function() {\n\n    return ( \n      <div> \n          <Search searchTerm = {this.state.filterText} userInput = {this.handleUserInput} />     \n          <Table searchTerm = {this.state.filterText} data = {this.props.data} /> \n      </div>\n    );\n}\n});\n\n// JSON\nvar DATA = [{\n  \"title\": \"Binding\",\n  \"tags\": \"Binding Hiding Miding Sliding SAVE\",\n  \"content\": \"This is the binding content area where information about binding is shown\"\n}, {\n  \"title\": \"Constant\",\n  \"tags\": \"Math bath slather calf save\",\n  \"content\": \"This is the Constant content area where information about Constant is shown\"\n}, {\n  \"title\": \"Numbers\",\n  \"tags\": \"Happy birthday sir and maam\",\n  \"content\": \"This is the Numbers content area where information about Numbers is shown\"\n}];\n\n// Render\nReact.render(<App data = {DATA} />, document.getElementById(\"app\"));"]},"metadata":{},"sourceType":"module"}