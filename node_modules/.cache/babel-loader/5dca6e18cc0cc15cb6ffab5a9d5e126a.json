{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\LanceM\\\\Documents\\\\Javascript\\\\SAEON_Work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\LanceM\\\\Documents\\\\Javascript\\\\SAEON_Work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\LanceM\\\\Documents\\\\Javascript\\\\SAEON_Work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\LanceM\\\\Documents\\\\Javascript\\\\SAEON_Work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\LanceM\\\\Documents\\\\Javascript\\\\SAEON_Work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\LanceM\\\\Documents\\\\Javascript\\\\SAEON_Work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\LanceM\\\\Documents\\\\Javascript\\\\SAEON_Work\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './CustomCSS.css';\nimport * as parsedData from './JSON_Dat.json';\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.HeaderFunc = function () {\n      var children = []; //var HeaderLogo\n\n      var base = React.createElement(\"nav\", {\n        class: \"white\",\n        role: \"navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"nav-wrapper container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"logo-container\",\n        href: \"www.google.com\",\n        className: \"brand-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"\\xA0 SARVA 3.0\"), React.createElement(\"ul\", {\n        class: \"right hide-on-med-and-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, children)));\n\n      for (var x in parsedData.default.ideas) {\n        for (var y in parsedData.default.ideas[x]) {\n          if (parsedData.default.ideas[x][y] === \"NavBar\") {\n            if (parsedData.default.ideas[x].ideas !== \"undefined\") {\n              for (var z in parsedData.default.ideas[x].ideas) {\n                if (parsedData.default.ideas[x].ideas[z].title === \"Menu\") {\n                  for (var ddl in parsedData.default.ideas[x].ideas[z].ideas) {\n                    var innerArray = [];\n\n                    if (parsedData.default.ideas[x].ideas[z].ideas[ddl].ideas !== \"undefined\") {\n                      for (var inner in parsedData.default.ideas[x].ideas[z].ideas[ddl].ideas) {\n                        var ddlStyle = {\n                          fontSize: '12px',\n                          indent: '50px'\n                        };\n                        innerArray.push(React.createElement(\"li\", {\n                          style: ddlStyle,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 119\n                          },\n                          __self: this\n                        }, React.createElement(\"a\", {\n                          href: \"www.google.com\",\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 119\n                          },\n                          __self: this\n                        }, parsedData.default.ideas[x].ideas[z].ideas[ddl].ideas[inner].title)));\n                      }\n                    }\n\n                    if (innerArray.length > 0) {\n                      children.push(React.createElement(\"li\", {\n                        class: \"sub-menu-parent\",\n                        \"tab-index\": \"0\",\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 124\n                        },\n                        __self: this\n                      }, React.createElement(\"a\", {\n                        href: \"www.google.com\",\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 125\n                        },\n                        __self: this\n                      }, parsedData.default.ideas[x].ideas[z].ideas[ddl].title, \" \\u21D3\"), React.createElement(\"ul\", {\n                        class: \"sub-menu\",\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 126\n                        },\n                        __self: this\n                      }, innerArray)));\n                    } else {\n                      children.push(React.createElement(\"li\", {\n                        styled: true,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 132\n                        },\n                        __self: this\n                      }, React.createElement(\"a\", {\n                        href: \"www.google.com\",\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 132\n                        },\n                        __self: this\n                      }, parsedData.default.ideas[x].ideas[z].ideas[ddl].title)));\n                    }\n                  }\n                } else if (parsedData.default.ideas[x].ideas[z].title === \"Logo\") {\n                  children.push(React.createElement(\"img\", {\n                    id: \"menu-logo\",\n                    alt: \"img not loaded\",\n                    src: logo,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 137\n                    },\n                    __self: this\n                  }));\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return base;\n    };\n\n    _this.SideNavFunc = function () {\n      var InnerDdl = [],\n          Items = [];\n      var Glyhicon = \"fa fa-fw fa-home\";\n      var Base = React.createElement(SideNav, {\n        componentClass: \"sideNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(SideNav.Toggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(SideNav.Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, Items));\n\n      var _loop = function _loop(o) {\n        for (var u in parsedData.default.ideas[o]) {\n          if (parsedData.default.ideas[o][u] === \"SideNav\") {\n            if (parsedData.default.ideas[o].ideas !== \"undefined\") {\n              var _loop2 = function _loop2(i) {\n                //Rember to check if you need to initialize anything\n                //Here check for a glyphicon, using home for now\n                if (parsedData.default.ideas[o].ideas[i].ideas !== \"undefined\") {\n                  InnerDdl = [];\n\n                  var _loop3 = function _loop3(w) {\n                    //Check what type it is, if its a modal, new tab, replace content and breadcrumb\n                    //If Modal\n                    // const ModalId = '#' + parsedData.default.ideas[o].ideas[i].ideas[w].title.replace(/\\s/g, '');\n                    // InnerDdl.push(<NavItem eventKey={parsedData.default.ideas[o].ideas[i].ideas[w].id} onClick={this.showModal}>\n                    //                 <NavText style={{color: 'black !important'}}>\n                    //                   <a type=\"button\" class=\"black-text\" data-toggle=\"modal\" data-target={ModalId}>{parsedData.default.ideas[o].ideas[i].ideas[w].title}</a>\n                    //                   {this.Modal(parsedData.default.ideas[o].ideas[i].ideas[w].title, \"More TEst\", parsedData.default.ideas[o].ideas[i].ideas[w].title.replace(/\\s/g, ''))}\n                    //                 </NavText>\n                    //               </NavItem>)\n                    ///////////////////////////////////////////////////\n                    //If new tab link  \n                    // InnerDdl.push(<NavItem eventKey={parsedData.default.ideas[o].ideas[i].ideas[w].id} >\n                    //                 <NavText style={{color: 'black !important'}}>\n                    //                 <a href=\"http://google.com\" rel=\"noopener nereferrer\" class=\"black-text\" target='_blank'>{parsedData.default.ideas[o].ideas[i].ideas[w].title}</a>\n                    //                 </NavText>\n                    //               </NavItem>)\n                    ///////////////////////////////////////////////////\n                    //If content reload with new breadcrumb\n                    InnerDdl.push(React.createElement(NavItem, {\n                      eventKey: parsedData.default.ideas[o].ideas[i].ideas[w].id,\n                      onClick: function onClick() {\n                        return _this.reloadContent(parsedData.default.ideas[o].ideas[i].ideas[w].title);\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 199\n                      },\n                      __self: this\n                    }, React.createElement(NavText, {\n                      style: {\n                        color: 'black !important'\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 200\n                      },\n                      __self: this\n                    }, parsedData.default.ideas[o].ideas[i].ideas[w].title))); ///////////////////////////////////////////////////\n                    // InnerDdl.push(<NavItem eventKey={parsedData.default.ideas[o].ideas[i].ideas[w].id} onClick= {() => popModal(parsedData.default.ideas[o].ideas[i].ideas[w].title, \"\")}>>\n                    //                 <NavText style={{color: 'black !important'}}>\n                    //                   {parsedData.default.ideas[o].ideas[i].ideas[w].title}\n                    //                 </NavText>\n                    //                 <dialog id=\"myDialog\">This is a dialog window</dialog>\n                    //               </NavItem>)\n                  };\n\n                  for (var w in parsedData.default.ideas[o].ideas[i].ideas) {\n                    _loop3(w);\n                  } /////////////////////////////////////////\n\n\n                  Items.push(React.createElement(NavItem, {\n                    eventKey: parsedData.default.ideas[o].ideas[i].id,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 217\n                    },\n                    __self: this\n                  }, React.createElement(NavIcon, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 218\n                    },\n                    __self: this\n                  }, React.createElement(\"i\", {\n                    className: Glyhicon,\n                    style: {\n                      fontSize: '1.75em',\n                      color: '#fff'\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 219\n                    },\n                    __self: this\n                  })), React.createElement(NavText, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 221\n                    },\n                    __self: this\n                  }, parsedData.default.ideas[o].ideas[i].title, \" \"), InnerDdl));\n                } else {\n                  Items.push(React.createElement(NavItem, {\n                    eventKey: parsedData.default.ideas[o].ideas[i].id,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 226\n                    },\n                    __self: this\n                  }, React.createElement(NavIcon, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 227\n                    },\n                    __self: this\n                  }, React.createElement(\"i\", {\n                    className: Glyhicon,\n                    style: {\n                      fontSize: '1.75em'\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 228\n                    },\n                    __self: this\n                  })), React.createElement(NavText, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 230\n                    },\n                    __self: this\n                  }, \" \", parsedData.default.ideas[o][u].ideas[i].title, \" \")));\n                }\n              };\n\n              for (var i in parsedData.default.ideas[o].ideas) {\n                _loop2(i);\n              }\n            }\n          }\n        }\n      };\n\n      for (var o in parsedData.default.ideas) {\n        _loop(o);\n      }\n\n      return Base;\n    };\n\n    _this.ContentFunc = function (Page) {\n      //Make use of page var to reload page content\n      var Heading = \"\",\n          Subtext = \"\";\n\n      if (Page !== \"\") {\n        Heading = React.createElement(\"h2\", {\n          class: \"header center text-darken-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, Page);\n        Subtext = React.createElement(\"div\", {\n          class: \"row center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          class: \"header col s12 text-darken-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, \"Updated, Interactive Tools are now available for detailed assessment of the impact of pressures and drivers on important human, physical, and environmental assets. These tools are currently focused on Impact Assessment, but will in time extend to allow determination of Risk and Vulnerability\"));\n      }\n\n      var Base = React.createElement(\"div\", {\n        id: \"index-banner\",\n        class: \"parallax-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"section no-pad-bot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), Heading, Subtext)));\n      return Base;\n    };\n\n    _this.ContentWidgets = function () {\n      var Text = React.createElement(\"div\", {\n        class: \"section no-pad-bot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        class: \"header center brown-text text-darken-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Distributed, High Resolution Data\"), React.createElement(\"h5\", {\n        class: \"header col s12 brown-text text-darken-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Distributed, high-resolution data can be annotated and linked from any standardised service in the web and included into our profiling and impact assessment tools. Very large datasets can be accommodated without deterioration in service - thanks to an innovative distributed data processing breakthrough.\")), React.createElement(\"div\", {\n        class: \"row center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#data-modal\",\n        id: \"download-button\",\n        class: \"center darken-2 waves-effect waves-light btn modal-trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Read More\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })));\n      var Widgets = React.createElement(\"div\", {\n        class: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col s12 m4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"icon-block center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \" center grey waves-effect waves-light btn modal-trigger\",\n        \"data-target\": \"search-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"h5\", {\n        class: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Search and Discover Resources\"), React.createElement(\"p\", {\n        class: \"light center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Use simple or advanced tools to search for data meeting your criteria.\"))), React.createElement(\"div\", {\n        class: \"col s12 m4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"icon-block center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \" center grey waves-effect waves-light btn modal-trigger\",\n        \"data-target\": \"theme-modal\",\n        onClick: function onClick() {\n          return _this.reloadContent('Themes');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Themes\"), React.createElement(\"h5\", {\n        class: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Explore Available Resources by Sector or Theme\"), React.createElement(\"p\", {\n        class: \"light center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Browse, preview, and access data and narratives in popular collections and in common themes.\"))), React.createElement(\"div\", {\n        class: \"col s12 m4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"icon-block center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \" center grey waves-effect waves-light btn modal-trigger\",\n        \"data-target\": \"contr-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Contribute\"), React.createElement(\"h5\", {\n        class: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Tell Us About Your Area of Interest\"), React.createElement(\"p\", {\n        class: \"light center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"www.google.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Register\"), \" as a user and contribute data, assessments, and media.\"))))); //const Background = <img id=\"img2\" src=\"background_image_4.png\" alt=\"Unsplashed background img 2\" ></img>\n\n      var Base = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container widgets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, Widgets), React.createElement(\"div\", {\n        class: \"parallax-container valign-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, Text));\n      return Base;\n    };\n\n    _this.FooterFunc = function () {\n      var children = [];\n      var FooterStyle = {\n        'padding-left': '1%',\n        'padding-right': '1%'\n      };\n      var base = React.createElement(\"footer\", {\n        class: \"page-footer font-small indigo\",\n        style: FooterStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, children));\n      var cardTitle;\n      var cardSub;\n\n      for (var x in parsedData.default.ideas) {\n        for (var y in parsedData.default.ideas[x]) {\n          if (parsedData.default.ideas[x][y] === \"Footer\") {\n            if (parsedData.default.ideas[x].ideas !== \"undefined\") {\n              for (var z in parsedData.default.ideas[x].ideas) {\n                cardTitle = \"\";\n                cardSub = \"\";\n                var type = false;\n                var linkList = [];\n\n                for (var r in parsedData.default.ideas[x].ideas[z]) {\n                  if (r === \"title\") {\n                    cardTitle = parsedData.default.ideas[x].ideas[z][r];\n                  } else if (r === \"attr\") {\n                    for (var t in parsedData.default.ideas[x].ideas[z][r]) {\n                      for (var u in parsedData.default.ideas[x].ideas[z][r][t]) {\n                        if (u === \"text\") {\n                          cardSub = React.createElement(\"p\", {\n                            class: \"white-text light\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 364\n                            },\n                            __self: this\n                          }, \" \", parsedData.default.ideas[x].ideas[z][r][t][u], \" \");\n                        } else if (u === \"\") {}\n                      }\n                    }\n                  } else if (r === \"ideas\") {\n                    for (var _t in parsedData.default.ideas[x].ideas[z][r]) {\n                      //Check link type here and determine if its a logo or something\n                      var link = _this.extractLink(parsedData.default.ideas[x].ideas[z][r][_t].title);\n\n                      if (_this.linkType(link)) {\n                        //It is an image, or more accurately it is a google drive doc\n                        cardSub = React.createElement(\"img\", {\n                          src: link.replace(\"open\", \"uc\"),\n                          alt: \"img not loaded\",\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 381\n                          },\n                          __self: this\n                        });\n                      } else {\n                        //it is not a google drive link\n                        type = true;\n                        linkList.push(React.createElement(\"li\", {\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 385\n                          },\n                          __self: this\n                        }, React.createElement(\"a\", {\n                          class: \"white-text light\",\n                          href: link,\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 385\n                          },\n                          __self: this\n                        }, parsedData.default.ideas[x].ideas[z][r][_t].title.split(\"http\")[0])));\n                      }\n                    }\n                  }\n                }\n\n                if (type) {\n                  children.push(React.createElement(\"div\", {\n                    class: \"col l3 s12\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 391\n                    },\n                    __self: this\n                  }, React.createElement(\"h5\", {\n                    class: \"white-text light\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 392\n                    },\n                    __self: this\n                  }, \" \", cardTitle, \" \"), React.createElement(\"ul\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 393\n                    },\n                    __self: this\n                  }, linkList)));\n                } else {\n                  children.push(React.createElement(\"div\", {\n                    class: \"col l3 s12\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 397\n                    },\n                    __self: this\n                  }, React.createElement(\"h5\", {\n                    class: \"white-text light\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 398\n                    },\n                    __self: this\n                  }, \" \", cardTitle, \" \"), cardSub));\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return base;\n    };\n\n    _this.state = {\n      content: \"\"\n    };\n    _this.reloadContent = _this.reloadContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showModal = _this.showModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hideModal = _this.hideModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //#region Helpers \n\n\n  _createClass(App, [{\n    key: \"showModal\",\n    value: function showModal() {\n      this.setState({\n        showModal: true\n      });\n    }\n  }, {\n    key: \"hideModal\",\n    value: function hideModal() {\n      this.setState({\n        showModal: false\n      });\n    }\n  }, {\n    key: \"reloadContent\",\n    value: function reloadContent(path) {\n      this.setState(function (state) {\n        return {\n          content: path\n        };\n      });\n    }\n  }, {\n    key: \"extractLink\",\n    value: function extractLink(str) {\n      var link;\n\n      if (str.indexOf(\"http\") > -1) {\n        link = str.split('http')[1];\n      } else {\n        link = \"\";\n      }\n\n      return \"http\" + link;\n    }\n  }, {\n    key: \"linkType\",\n    value: function linkType(str) {\n      if (str.toString().includes(\"drive.google\")) //Check if it is an image\n        {\n          return true;\n        }\n\n      return false;\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal(id) {\n      ReactDOM.getElementById(id).style.display = \"none\";\n    }\n  }, {\n    key: \"Modal\",\n    value: function Modal(header, innerText, id) {\n      var _this2 = this;\n\n      var CustomModal = function CustomModal() {\n        return React.createElement(\"div\", {\n          class: \"modal fade hide\",\n          id: id,\n          role: \"dialog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"modal-dialog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"modal-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"modal-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"close\",\n          \"data-dismiss\": \"modal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"h4\", {\n          class: \"modal-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, header)), React.createElement(\"div\", {\n          class: \"modal-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, innerText)), React.createElement(\"div\", {\n          class: \"modal-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-default\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this2.closeModal(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Close\")))));\n      };\n\n      return ReactDOM.createPortal(React.createElement(CustomModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), document.getElementById('root'));\n    } //#endregion\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, this.SideNavFunc(), this.HeaderFunc(), this.ContentFunc(this.state.content), this.ContentWidgets(), this.FooterFunc());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\LanceM\\Documents\\Javascript\\SAEON_Work\\client\\src\\App.js"],"names":["React","Component","ReactDOM","parsedData","SideNav","NavItem","NavIcon","NavText","App","props","HeaderFunc","children","base","x","default","ideas","y","z","title","ddl","innerArray","inner","ddlStyle","fontSize","indent","push","length","logo","SideNavFunc","InnerDdl","Items","Glyhicon","Base","o","u","i","w","id","reloadContent","color","ContentFunc","Page","Heading","Subtext","ContentWidgets","Text","Widgets","FooterFunc","FooterStyle","cardTitle","cardSub","type","linkList","r","t","link","extractLink","linkType","replace","split","state","content","bind","showModal","hideModal","setState","path","str","indexOf","toString","includes","getElementById","style","display","header","innerText","CustomModal","closeModal","createPortal","document"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport './CustomCSS.css'; \nimport * as parsedData from './JSON_Dat.json';\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nclass App extends Component { \n\nconstructor(props) {\n  super(props);\n  this.state = {content: \"\"};\n  this.reloadContent = this.reloadContent.bind(this)\n  this.showModal = this.showModal.bind(this)\n  this.hideModal = this.hideModal.bind(this)\n}\n\n//#region Helpers \n\nshowModal() {\n  this.setState({ showModal: true });\n};\n\nhideModal() {\n  this.setState({ showModal: false });\n};\n\nreloadContent(path) {\n  this.setState((state) => ({content : path}))\n}\n\nextractLink(str) {\n  var link;\n\n  if (str.indexOf(\"http\") > -1) {\n      link = str.split('http')[1];\n  }\n  else {\n      link = \"\";\n  }\n\n  return \"http\" + link;\n}\n\nlinkType(str) {\n  if (str.toString().includes(\"drive.google\")) //Check if it is an image\n  {\n    return true;\n  }\n\n  return false;\n}\n\ncloseModal(id) {\n  ReactDOM.getElementById(id).style.display = \"none\";\n}\n\nModal(header, innerText, id) {\n    const CustomModal = () => \n    ( <div class=\"modal fade hide\" id={id} role=\"dialog\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n              <h4 class=\"modal-title\">{header}</h4>\n            </div>\n            <div class=\"modal-body\">\n              <p>{innerText}</p>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" onClick={() => this.closeModal(id)}>Close</button>\n            </div>\n          </div>\n        </div>\n      </div>);\n\n  return ReactDOM.createPortal( <CustomModal/>, document.getElementById('root'));\n}\n//#endregion\n\nHeaderFunc = () => {\n\n  const children = []\n  //var HeaderLogo\n  const base = (<nav class=\"white\" role=\"navigation\">\n                  <div class=\"nav-wrapper container\">\n                    <a id=\"logo-container\" href=\"www.google.com\" className=\"brand-logo\">&nbsp; SARVA 3.0</a>\n                    <ul class=\"right hide-on-med-and-down\">\n                      {children}\n                    </ul>\n                  </div>\n                </nav>)\n\n  for (let x in parsedData.default.ideas){\n    for (let y in parsedData.default.ideas[x])\n    { \n      if (parsedData.default.ideas[x][y] === \"NavBar\") \n      {\n        if(parsedData.default.ideas[x].ideas !== \"undefined\"){\n          for (let z in parsedData.default.ideas[x].ideas){\n            if (parsedData.default.ideas[x].ideas[z].title === \"Menu\"){\n              for (let ddl in parsedData.default.ideas[x].ideas[z].ideas){\n                const innerArray = []\n                if (parsedData.default.ideas[x].ideas[z].ideas[ddl].ideas !== \"undefined\")\n                {\n                  for (let inner in parsedData.default.ideas[x].ideas[z].ideas[ddl].ideas)\n                  {\n                    const ddlStyle = { \n                                        fontSize: '12px',\n                                        indent: '50px'\n                                     };\n\n                     innerArray.push(<li style={ddlStyle}><a href=\"www.google.com\" >{parsedData.default.ideas[x].ideas[z].ideas[ddl].ideas[inner].title}</a></li>)\n                  }\n                }\n                if (innerArray.length > 0)  \n                {\n                  children.push(<li class=\"sub-menu-parent\" tab-index=\"0\">\n                                  <a href=\"www.google.com\">{parsedData.default.ideas[x].ideas[z].ideas[ddl].title} &#8659;</a>\n                                  <ul class=\"sub-menu\">\n                                    {innerArray}\n                                  </ul>\n                                </li>)\n                }\n                else {\n                  children.push(<li styled><a href=\"www.google.com\">{parsedData.default.ideas[x].ideas[z].ideas[ddl].title}</a></li>)\n                }\n              }\n            }\n            else if (parsedData.default.ideas[x].ideas[z].title === \"Logo\"){\n              children.push(<img id=\"menu-logo\" alt=\"img not loaded\" src={logo}></img> )\n            }\n          } \n        }\n      }\n    }\n  }\n  return base \n}\n\nSideNavFunc = () => {\n\nvar InnerDdl = [], Items = []\nvar Glyhicon = \"fa fa-fw fa-home\"\n\nconst Base = <SideNav componentClass=\"sideNav\"><SideNav.Toggle /><SideNav.Nav>{ Items }</SideNav.Nav></SideNav>\n\nfor (let o in parsedData.default.ideas)\n{\n  for (let u in parsedData.default.ideas[o])\n  {\n    if (parsedData.default.ideas[o][u] === \"SideNav\") \n    {\n      if(parsedData.default.ideas[o].ideas !== \"undefined\")\n      {\n        for (let i in parsedData.default.ideas[o].ideas)\n        {\n          //Rember to check if you need to initialize anything\n\n          //Here check for a glyphicon, using home for now\n\n          if (parsedData.default.ideas[o].ideas[i].ideas !== \"undefined\")\n          {\n            InnerDdl = []\n            for (let w in parsedData.default.ideas[o].ideas[i].ideas)\n            {\n              //Check what type it is, if its a modal, new tab, replace content and breadcrumb\n\n              //If Modal\n              \n              // const ModalId = '#' + parsedData.default.ideas[o].ideas[i].ideas[w].title.replace(/\\s/g, '');\n              // InnerDdl.push(<NavItem eventKey={parsedData.default.ideas[o].ideas[i].ideas[w].id} onClick={this.showModal}>\n              //                 <NavText style={{color: 'black !important'}}>\n              //                   <a type=\"button\" class=\"black-text\" data-toggle=\"modal\" data-target={ModalId}>{parsedData.default.ideas[o].ideas[i].ideas[w].title}</a>\n              //                   {this.Modal(parsedData.default.ideas[o].ideas[i].ideas[w].title, \"More TEst\", parsedData.default.ideas[o].ideas[i].ideas[w].title.replace(/\\s/g, ''))}\n              //                 </NavText>\n              //               </NavItem>)\n            \n              ///////////////////////////////////////////////////\n\n              //If new tab link  \n\n              // InnerDdl.push(<NavItem eventKey={parsedData.default.ideas[o].ideas[i].ideas[w].id} >\n              //                 <NavText style={{color: 'black !important'}}>\n              //                 <a href=\"http://google.com\" rel=\"noopener nereferrer\" class=\"black-text\" target='_blank'>{parsedData.default.ideas[o].ideas[i].ideas[w].title}</a>\n              //                 </NavText>\n              //               </NavItem>)\n            \n              ///////////////////////////////////////////////////\n\n              //If content reload with new breadcrumb\n              \n              InnerDdl.push(<NavItem eventKey={parsedData.default.ideas[o].ideas[i].ideas[w].id} onClick= {() => this.reloadContent(parsedData.default.ideas[o].ideas[i].ideas[w].title)}>\n                              <NavText style={{color: 'black !important'}}>\n                              {parsedData.default.ideas[o].ideas[i].ideas[w].title}\n                              </NavText>\n                            </NavItem>)\n\n              ///////////////////////////////////////////////////\n\n              // InnerDdl.push(<NavItem eventKey={parsedData.default.ideas[o].ideas[i].ideas[w].id} onClick= {() => popModal(parsedData.default.ideas[o].ideas[i].ideas[w].title, \"\")}>>\n              //                 <NavText style={{color: 'black !important'}}>\n              //                   {parsedData.default.ideas[o].ideas[i].ideas[w].title}\n              //                 </NavText>\n              //                 <dialog id=\"myDialog\">This is a dialog window</dialog>\n              //               </NavItem>)\n            }\n\n            /////////////////////////////////////////\n\n            Items.push(<NavItem eventKey={ parsedData.default.ideas[o].ideas[i].id }>\n                        <NavIcon>\n                          <i className={Glyhicon} style={{ fontSize: '1.75em', color: '#fff' }} />\n                        </NavIcon>\n                        <NavText>{ parsedData.default.ideas[o].ideas[i].title } </NavText>\n                        {InnerDdl}\n                      </NavItem>) \n          }\n          else{ \n            Items.push(<NavItem eventKey={ parsedData.default.ideas[o].ideas[i].id }>\n                        <NavIcon>\n                          <i className={Glyhicon} style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText> {parsedData.default.ideas[o][u].ideas[i].title} </NavText>\n                      </NavItem>)\n          }\n        }\n      }\n    }\n  }\n}\n\n\nreturn (Base)\n}\n\nContentFunc = (Page) => {\n  //Make use of page var to reload page content\n  \n  var Heading = \"\", Subtext = \"\" \n\n  if (Page !== \"\"){\n    Heading = <h2 class=\"header center text-darken-4\">{Page}</h2>\n    Subtext = <div class=\"row center\">\n                <h5 class=\"header col s12 text-darken-4\">Updated, Interactive Tools are now available for detailed assessment of the impact of pressures and drivers on important human, physical, and environmental assets. These tools are currently focused on Impact Assessment, but will in time extend to allow determination of Risk and Vulnerability</h5>\n              </div>\n\n  }\n\n  var Base = <div id=\"index-banner\" class=\"parallax-container\" >\n                  <div class=\"section no-pad-bot\">\n                    <div class=\"container\">\n                      <br></br>\n                      <br></br>\n                      { Heading }\n                      { Subtext }\n                    </div>\n                  </div> \n                </div>\n\n  return Base\n}\n\nContentWidgets = () => {\n  \n  const Text = <div class=\"section no-pad-bot\">\n                  <div class=\"container\">\n                    <div class=\"row center\">\n                      <h2 class=\"header center brown-text text-darken-3\">Distributed, High Resolution Data</h2>\n                      <h5 class=\"header col s12 brown-text text-darken-3\">Distributed, high-resolution data can be annotated and linked from any standardised service in the web and included into our profiling and impact assessment tools. Very large datasets can be accommodated without deterioration in service - thanks to an innovative distributed data processing breakthrough.</h5>      \n                    </div>\n                    <div class=\"row center\">\n                      <a href=\"#data-modal\" id=\"download-button\" class=\"center darken-2 waves-effect waves-light btn modal-trigger\">Read More</a>\n                    </div>\n                    <br></br>\n                  </div>\n                </div>\n\n  const Widgets = <div class=\"section\">\n                    <div class=\"row\">\n                      <div class=\"col s12 m4\">\n                        <div class=\"icon-block center\">\n                          <button class=\" center grey waves-effect waves-light btn modal-trigger\" data-target=\"search-modal\">Search</button>   \n                          <h5 class=\"center\">Search and Discover Resources</h5>\n                          <p class=\"light center\">Use simple or advanced tools to search for data meeting your criteria.</p>\n                        </div>\n                      </div>\n\n                      <div class=\"col s12 m4\">\n                        <div class=\"icon-block center\">\n                          <button class=\" center grey waves-effect waves-light btn modal-trigger\" data-target=\"theme-modal\" onClick={ () => this.reloadContent('Themes')}>Themes</button>            \n                          <h5 class=\"center\">Explore Available Resources by Sector or Theme</h5>\n                          <p class=\"light center\">Browse, preview, and access data and narratives in popular collections and in common themes.</p>\n                        </div>\n                      </div>\n\n                      <div class=\"col s12 m4\">\n                        <div class=\"icon-block center\">\n                          <button class=\" center grey waves-effect waves-light btn modal-trigger\" data-target=\"contr-modal\">Contribute</button>  \n                          <h5 class=\"center\">Tell Us About Your Area of Interest</h5>\n                          <p class=\"light center\"><a href=\"www.google.com\">Register</a> as a user and contribute data, assessments, and media.</p>\n                        </div>\n                      </div>\n                      </div>\n                  </div>\n  \n  //const Background = <img id=\"img2\" src=\"background_image_4.png\" alt=\"Unsplashed background img 2\" ></img>\n\n  const Base = \n  <div>\n    <div class=\"container widgets\">\n      { Widgets }\n    </div>\n    <div class=\"parallax-container valign-wrapper\" >\n      {Text}\n    </div>\n  </div>\n\n  return ( Base )\n}\n\nFooterFunc = () => { \n\n  const children = [] \n  const FooterStyle = { 'padding-left': '1%', 'padding-right': '1%' }\n  const base = (<footer class=\"page-footer font-small indigo\" style={ FooterStyle }><div class=\"row\">{children}</div></footer>)\n  var cardTitle\n  var cardSub \n\n  for (let x in parsedData.default.ideas){\n    for (let y in parsedData.default.ideas[x])\n    { \n      if (parsedData.default.ideas[x][y] === \"Footer\") \n      {\n        if(parsedData.default.ideas[x].ideas !== \"undefined\")\n        {\n          for (let z in parsedData.default.ideas[x].ideas)\n          {\n\n            cardTitle = \"\"\n            cardSub = \"\";\n            var type = false;\n            var linkList = []\n\n            for (let r in parsedData.default.ideas[x].ideas[z]){\n              if (r === \"title\")\n              {\n                cardTitle = parsedData.default.ideas[x].ideas[z][r];\n              }\n              else if (r === \"attr\")\n              {\n                for (let t in parsedData.default.ideas[x].ideas[z][r])\n                {\n                  for (let u in parsedData.default.ideas[x].ideas[z][r][t])\n                  {\n                    if (u === \"text\")\n                    {\n                      cardSub = <p class=\"white-text light\"> { parsedData.default.ideas[x].ideas[z][r][t][u] } </p>\n                    }\n                    else if (u === \"\")\n                    {\n\n                    }\n                  }\n                }\n              }\n              else if (r === \"ideas\")\n              {\n                for (let t in parsedData.default.ideas[x].ideas[z][r])\n                {\n                  //Check link type here and determine if its a logo or something\n                  var link = (this.extractLink(parsedData.default.ideas[x].ideas[z][r][t].title));\n                  \n                  if (this.linkType(link)) { //It is an image, or more accurately it is a google drive doc\n                    cardSub = <img src={ link.replace(\"open\", \"uc\") } alt=\"img not loaded\"></img>\n                  } \n                  else { //it is not a google drive link\n                    type = true;\n                    linkList.push(<li><a class=\"white-text light\" href={ link }>{ parsedData.default.ideas[x].ideas[z][r][t].title.split(\"http\")[0] }</a></li>)\n                  }\n                }\n              }\n            }\n            if (type) {\n              children.push(<div class=\"col l3 s12\">\n                              <h5 class=\"white-text light\"> { cardTitle } </h5>\n                              <ul>{ linkList }</ul>\n                            </div>)\n            }\n            else {\n            children.push(<div class=\"col l3 s12\">\n                            <h5 class=\"white-text light\"> { cardTitle } </h5>\n                            { cardSub }\n                          </div>)\n            }\n          } \n        }\n      }\n    }\n  }\n  return base \n}\n\n  render() {\n\n    return (\n      <div className=\"App\" class=\"App\"> \n        {this.SideNavFunc()}\n        {this.HeaderFunc()}\n        {this.ContentFunc(this.state.content)} \n        {this.ContentWidgets()}       \n        {this.FooterFunc()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}